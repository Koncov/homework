<ul class="accordion-list">
    <li class="accordion-list__item accordion-list__item--opened">
    <button class="accordion-list__control" type="button">
        Вкладка 1
    </button>
    <div class="accordion-list__content">
        <h3>Lorem ipsum dolor sit amet.</h3>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Atque, adipisci?</p>
    </div>
    </li>
    <li class="accordion-list__item accordion-list__item--opened">
    <button class="accordion-list__control" type="button">
        Вкладка 2
    </button>
    <div class="accordion-list__content">
        <h3>Lorem ipsum dolor sit amet.</h3>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Atque, adipisci?</p>
    </div>
    </li>
</ul>





    //accordion моно - закрывать блоки в ручную

    const accordionLists = document.querySelectorAll('.accordion-list')

    accordionLists.forEach(el => {

        
        //Ели нужна открытая вкладка аккордеона
        //document.querySelector('.accordion-list__item--opened .accordion-list__content').style.maxHeight = document.querySelector('.accordion-list__item--opened .accordion-list__content').scrollHeight + 'px'


        el.addEventListener('click', (event) => {

            const accordionControl = event.target.closest('.accordion-list__control')
            if (!accordionControl) return
            const accordionItem = accordionControl.parentElement
            const accordionContent = accordionControl.nextElementSibling

            accordionItem.classList.toggle('accordion-list__item--opened')

            if (accordionItem.classList.contains('accordion-list__item--opened')) {
                accordionContent.style.maxHeight = accordionContent.scrollHeight + 'px'
            } else {
                accordionContent.style.maxHeight = null
            }
        })
    })




      // accordion автоматически закрываются предыдущие блоки.
  const accordionLists = document.querySelectorAll('.accordion-list')

  accordionLists.forEach(el => {
    el.addEventListener('click', (event) => {
      const accordionControl = event.target.closest('.accordion-list__control')
      if (!accordionControl) return

      const accordionItem = accordionControl.parentElement
      const accordionContent = accordionControl.nextElementSibling

      // Закрываем все открытые элементы внутри этого списка
      el.querySelectorAll('.accordion-list__item').forEach(item => {
        if (item !== accordionItem) {
          item.classList.remove('accordion-list__item--opened')
          item.querySelector('.accordion-list__content').style.maxHeight = null
        }
      })

      // Переключаем текущий
      accordionItem.classList.toggle('accordion-list__item--opened')

      if (accordionItem.classList.contains('accordion-list__item--opened')) {
        accordionContent.style.maxHeight = accordionContent.scrollHeight + 'px'
      } else {
        accordionContent.style.maxHeight = null
      }
    })
  })





